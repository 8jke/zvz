-- Load Kavo UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Phenom Aimbot", "DarkTheme")

-- Main Tab
local Main = Window:NewTab("Aimbot Controls")
local MainSection = Main:NewSection("Aimbot Settings")

-- UI Settings Tab
local SettingsTab = Window:NewTab("UI Settings")
local SettingsSection = SettingsTab:NewSection("Settings")

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local torso = character:WaitForChild("Torso")
local camera = game.Workspace.CurrentCamera
local rs = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")

-- Variables for state management
local is155Active = false
local is190Active = false
local is130Active = false
local is115Active = false
local tracking = false
local targetY = 155

-- Function to find the nearest goal
local function findGoal()
    local nearestGoal = nil
    local lowest = math.huge
    for _, v in pairs(game.Workspace:GetDescendants()) do
        if v.Name == "Goal" and v:IsA("Part") then
            local distance = (torso.Position - v.Position).magnitude
            if distance < lowest then
                lowest = distance
                nearestGoal = v
            end
        end
    end
    return nearestGoal
end

-- Function to update the camera position based on the active mode
local function updateCamera()
    while true do
        wait()
        if tracking then
            local partyGoal = findGoal()
            if partyGoal then
                local currentDistance = (character.PrimaryPart.Position - partyGoal.Position).magnitude

                if is155Active then
                    targetY = 155 - math.floor(math.max(currentDistance - 5, 0) / 5) * 1.1
                    targetY = math.clamp(targetY, 20, 155)
                elseif is190Active then
                    targetY = 190 - math.floor(currentDistance / 5)
                    targetY = math.clamp(targetY, 20, 190)
                elseif is130Active then
                    targetY = 130 - math.floor(currentDistance / 5)
                    targetY = math.clamp(targetY, 20, 130)
                elseif is115Active then
                    targetY = 115 - math.floor(currentDistance / 5)
                    targetY = math.clamp(targetY, 20, 115)
                end

                local lookAt = partyGoal.Position + Vector3.new(0, targetY, 0)
                camera.CFrame = CFrame.new(camera.CFrame.Position, lookAt)
            end
        end
    end
end

local cameraUpdateCoroutine = coroutine.create(updateCamera)

-- Button to toggle 155 camera mode
MainSection:NewButton("Activate 155 Mode", "Activates the 155 camera mode.", function()
    is190Active = false
    is130Active = false
    is115Active = false
    is155Active = true
    Library:Notification("Mode Activated", "155 Mode is now active!", 5)

    -- 155 Mode Aimbot Functionality
    local partyGoal = findGoal()
    if partyGoal then
        camera.CFrame = CFrame.new(camera.CFrame.Position, partyGoal.Position + Vector3.new(0, 155, 0))
    end
end)

-- Button to toggle 190 camera mode
MainSection:NewButton("Activate 190 Mode", "Activates the 190 camera mode.", function()
    is155Active = false
    is130Active = false
    is115Active = false
    is190Active = true
    Library:Notification("Mode Activated", "190 Mode is now active!", 5)

    -- 190 Mode Aimbot Functionality
    local partyGoal = findGoal()
    if partyGoal then
        camera.CFrame = CFrame.new(camera.CFrame.Position, partyGoal.Position + Vector3.new(0, 190, 0))
    end
end)

-- Button to toggle 130 camera mode
MainSection:NewButton("Activate 130 Mode", "Activates the 130 camera mode.", function()
    is155Active = false
    is190Active = false
    is115Active = false
    is130Active = true
    Library:Notification("Mode Activated", "130 Mode is now active!", 5)

    -- 130 Mode Aimbot Functionality
    local partyGoal = findGoal()
    if partyGoal then
        camera.CFrame = CFrame.new(camera.CFrame.Position, partyGoal.Position + Vector3.new(0, 130, 0))
    end
end)

-- Button to toggle 115 camera mode
MainSection:NewButton("Activate 115 Mode", "Activates the 115 camera mode.", function()
    is155Active = false
    is190Active = false
    is130Active = false
    is115Active = true
    Library:Notification("Mode Activated", "115 Mode is now active!", 5)

    -- 115 Mode Aimbot Functionality
    local partyGoal = findGoal()
    if partyGoal then
        camera.CFrame = CFrame.new(camera.CFrame.Position, partyGoal.Position + Vector3.new(0, 115, 0))
    end
end)

-- Ball Mag Button
MainSection:NewButton("Ball Mag (Press R)", "Gives you Ball Mag", function()
    local UIS = game:GetService('UserInputService')
    local Key = 'R'
    UIS.InputBegan:Connect(function(Input, IsTyping)
        if IsTyping then return end
        if Input.KeyCode == Enum.KeyCode[Key] then
            local ball = game.Workspace.Map.Basketball.Handle
            if ball then
                ball.CFrame = player.Character.HumanoidRootPart.CFrame
            end
        end
    end)
end)

-- Keybind to toggle the GUI visibility
SettingsSection:NewKeybind("Toggle GUI", "Toggles the GUI visibility.", Enum.KeyCode.One, function()
    Library:ToggleUI()
end)

-- Function to handle input for tracking
local function onInputBegan(input, gameProcessedEvent)
    if input.KeyCode == Enum.KeyCode.X then
        tracking = true
    end
end

local function onInputEnded(input)
    if input.KeyCode == Enum.KeyCode.X then
        tracking = false
    end
end

-- Connect the input events to the functions
userInputService.InputBegan:Connect(onInputBegan)
userInputService.InputEnded:Connect(onInputEnded)

-- Button to rejoin the game
SettingsSection:NewButton("Rejoin Game", "Rejoin the current game.", function()
    local teleportService = game:GetService("TeleportService")
    teleportService:Teleport(game.PlaceId, player)
end)

-- Start the camera update coroutine
coroutine.resume(cameraUpdateCoroutine)
