-- Load Rayfield UI Library
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
getgenv().SecureMode = true -- Use Secure Mode if necessary

-- Create the main window
local Window = Rayfield:CreateWindow({
    Name = "Phenom Aimbot",
    LoadingTitle = "Rayfield Interface Suite",
    LoadingSubtitle = "by Sirius",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "Phenom Aimbot"
    },
    Discord = {
        Enabled = false,
        Invite = "", -- Set your invite link if needed
        RememberJoins = true
    },
    KeySystem = false,
})

-- Main Tab for Aimbot Controls
local AimbotTab = Window:CreateTab("Aimbot Controls", 4483362458)
-- Tab for UI Settings
local SettingsTab = Window:CreateTab("UI Settings", 4483362458)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local torso = character:WaitForChild("Torso")
local camera = game.Workspace.CurrentCamera
local userInputService = game:GetService("UserInputService")

-- State management variables
local is155Active = false
local is190Active = false
local is140Active = false
local is135Active = false
local tracking = false
local targetY = 155
local guiVisible = true

-- Function to find the nearest goal
local function findGoal()
    local nearestGoal = nil
    local lowest = math.huge
    for _, v in pairs(game.Workspace:GetDescendants()) do
        if v.Name == "Goal" and v:IsA("Part") then
            local distance = (torso.Position - v.Position).magnitude
            if distance < lowest then
                lowest = distance
                nearestGoal = v
            end
        end
    end
    return nearestGoal
end

-- Function to update the camera position based on the active mode
local function updateCamera()
    while true do
        wait()
        if tracking then
            local partyGoal = findGoal()
            if partyGoal then
                local currentDistance = (character.PrimaryPart.Position - partyGoal.Position).magnitude
                
                if is155Active then
                    targetY = 155 - math.floor(math.max(currentDistance - 5, 0) / 5) * 1.1
                    targetY = math.clamp(targetY, 20, 155)
                elseif is190Active then
                    targetY = 190 - math.floor(currentDistance / 5)
                    targetY = math.clamp(targetY, 20, 190)
                elseif is140Active then
                    targetY = 140 - math.floor(currentDistance / 5)
                    targetY = math.clamp(targetY, 20, 140)
                elseif is135Active then
                    targetY = 135 - math.floor(currentDistance / 5)
                    targetY = math.clamp(targetY, 20, 135)
                end
                
                local lookAt = partyGoal.Position + Vector3.new(0, targetY, 0)
                camera.CFrame = CFrame.new(camera.CFrame.Position, lookAt)
                
                -- Print the player's current position to the console
                print("Current Position:", character.PrimaryPart.Position)
            end
        end
    end
end

-- Function to handle input for tracking
local function onInputBegan(input, gameProcessedEvent)
    if input.KeyCode == Enum.KeyCode.X then
        tracking = true
        print("Tracking started")
    elseif input.KeyCode == Enum.KeyCode.T then
        guiVisible = not guiVisible -- Toggle GUI visibility
        Rayfield:ToggleUI(guiVisible)
    end
end

local function onInputEnded(input)
    if input.KeyCode == Enum.KeyCode.X then
        tracking = false
        print("Tracking stopped")
    end
end

-- Connect the input events to the functions
userInputService.InputBegan:Connect(onInputBegan)
userInputService.InputEnded:Connect(onInputEnded)

-- Start the camera update coroutine
coroutine.wrap(updateCamera)()

-- Button to toggle 155 camera mode
AimbotTab:CreateButton({
    Name = "Activate 155 Mode",
    Callback = function()
        is190Active = false
        is140Active = false
        is135Active = false
        is155Active = true
        Rayfield:Notify({
            Title = "Mode Activated",
            Content = "155 Mode is now active!",
            Duration = 3,
        })
    end,
})

-- Button to toggle 190 camera mode
AimbotTab:CreateButton({
    Name = "Activate 190 Mode",
    Callback = function()
        is155Active = false
        is140Active = false
        is135Active = false
        is190Active = true
        Rayfield:Notify({
            Title = "Mode Activated",
            Content = "190 Mode is now active!",
            Duration = 3,
        })
    end,
})

-- Button to toggle 140 camera mode
AimbotTab:CreateButton({
    Name = "Activate 140 Mode",
    Callback = function()
        is155Active = false
        is190Active = false
        is135Active = false
        is140Active = true
        Rayfield:Notify({
            Title = "Mode Activated",
            Content = "140 Mode is now active!",
            Duration = 3,
        })
    end,
})

-- Button to toggle 135 camera mode
AimbotTab:CreateButton({
    Name = "Activate 135 Mode",
    Callback = function()
        is155Active = false
        is190Active = false
        is140Active = false
        is135Active = true
        Rayfield:Notify({
            Title = "Mode Activated",
            Content = "135 Mode is now active!",
            Duration = 3,
        })
    end,
})

-- Keybind to toggle the GUI visibility
SettingsTab:CreateKeybind({
    Name = "Toggle GUI",
    CurrentKeybind = "T",
    HoldToInteract = false,
    Callback = function()
        guiVisible = not guiVisible -- Toggle GUI visibility
        Rayfield:ToggleUI(guiVisible)
    end,
})

-- Button for rejoining the game
SettingsTab:CreateButton({
    Name = "Rejoin Game",
    Callback = function()
        local player = game.Players.LocalPlayer
        local placeId = game.PlaceId
        game:GetService("TeleportService"):Teleport(placeId, player)
    end,
})

-- Start the GUI
Rayfield:ToggleUI()
